apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: java-ms-backstage-template
  title: Java Microservice
  description: create a new java microservice with springboot
spec:
  owner: backstage/techdocs-core
  type: service

  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Service Info
      required:
        - microserviceName
      properties:
        microserviceName:
          type: string
          title: Service Name
          description: Unique name for your service
        teamName:
          type: string
          title: Team Name
          description: Name of the team who owns this service

  steps:
    - id: fetch-template
      name: Generate Java Code
      action: fetch:template
      input:
        url: https://github.com/jpereiramp/backstage-test/blob/main/templates/java-skeleton
        values:
          microserviceName: ${{ parameters.microserviceName }}

    # - id: add-service-to-caravan
    #   name: Add Microservice Definition to Caravan
    #   action: github:pull-request
    #   input:
    #     repoUrl: https://github.com/zwift/caravan
    #     branchName: add-${{ parameters.microserviceName }}
    #     title: Add new microservice ${{ parameters.microserviceName }}
    #     description: First integration PR for ${{ parameters.microserviceName }}
    #     sourcePath: ./  # Use root folder or customize
    #     token: ${{ secrets.githubToken }}

    # - id: add-service-to-frame-sonarqube
    #   name: Create Repository on GitHub
    #   action: github:pull-request
    #   input:
    #     repoUrl: https://github.com/zwift/frame-sonarqube
    #     branchName: add-${{ parameters.microserviceName }}
    #     title: Add new microservice ${{ parameters.microserviceName }}
    #     description: Second integration PR for ${{ parameters.microserviceName }}
    #     sourcePath: ./  # Use root folder or customize
    #     token: ${{ secrets.githubToken }}

    # - id: add-service-to-cloudbox
    #   name: Add Microservice to Cloudbox
    #   action: github:pull-request
    #   input:
    #     repoUrl: https://github.com/zwift/cloudbox
    #     branchName: add-${{ parameters.microserviceName }}
    #     title: Add new microservice ${{ parameters.microserviceName }}
    #     description: Final integration PR for ${{ parameters.microserviceName }}
    #     sourcePath: ./  # Use root folder or customize
    #     token: ${{ secrets.githubToken }}

    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        repoUrl: https://github.com/jpereiramp/${{ parameters.microserviceName }}
        description: Service ${{ parameters.microserviceName }} published via Backstage.
        repoVisibility: private
        token: ${{ secrets.githubToken }}

  output:
    links:
      - title: Service Repository
        url: ${{ steps.publish.output.remoteUrl }}
