---
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: best-team
  description: The BEST team
spec:
  type: business-unit
  profile:
    displayName: BEST
    email: best@company.com
    picture: https://static.dezeen.com/uploads/2025/05/sq-google-g-logo-update_dezeen_2364_col_0-852x852.jpg
  members: [jdoe]
---
apiVersion: backstage.io/v1alpha1
kind: User
metadata:
  name: jdoe
spec:
  profile:
    displayName: John Doe
    email: John-doe@example.com
    picture: https://example.com/staff/jenny-with-party-hat.jpeg
  memberOf: [best-team]
---
apiVersion: backstage.io/v1alpha1
kind: Domain
metadata:
  name: game
  description: Everything about the Game
spec:
  owner: best-team
---
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: game
  description: The game
spec:
  owner: best-team
  domain: game
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: game-api-service
  description: The place for all game related stuff
spec:
  type: microservice
  lifecycle: production
  owner: best-team
  system: game
  dependsOn:
    - resource:default/game-api-db
  # dependencyOf:
  #   - component:default/artist-web-lookup
  providesApis:
    - game-api
---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: game-api-db
  description: Stores game data
spec:
  type: database
  owner: best-team
  system: game
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: game-api
  description: REST API for game-related data, which end-users and game client communicate with
spec:
  type: openapi
  lifecycle: production
  owner: best-team
  system: game
  definition: |
    openapi: "3.0.0"
    info:
      version: 1.0.0
      title: Game API
      license:
        name: MIT
    servers:
      - url: http://matches.gamingcompany.com/v1
    paths:
      /artists:
        get:
          summary: List all matches

